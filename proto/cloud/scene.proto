syntax = "proto3";

// option optimize_for = LITE_RUNTIME;

package proto.cloud;

import "proto/cloud/common.proto";
import "proto/cloud/clean_param.proto";
import "proto/cloud/timing.proto";

message SceneTask {
    uint32 index = 1;  // 顺序，从1开始

    enum Type {
        CURRENT_ROOM = 0;
        ALL_ROOMS = 1;
    }
    Type type = 2;

    enum CleanMode {
        GENERAL = 0;    // 通用模式
        SMART = 1;      // 智能省心模式
    }

    // 通用参数
    message General {
        CleanType clean_type = 1;
        uint32 clean_times = 2; // 清扫次数，非 0 有效
        Fan fan = 3;
        MopMode mop_mode = 4;
        CleanExtent clean_extent = 5;
    }

    message CurrentRoom {
        message Unit {
            General general = 1;  // 通用模式会有这项

            message RoomClean {
                uint32 room_id = 1;
                RoomScene room_scene = 2;
            }
            message ZoneClean {
                Quadrangle quadrangle = 1;
            }

            oneof Param {
                RoomClean room_clean = 2;
                ZoneClean zone_clean = 3;
            }
        }
        CleanMode mode = 1;
        repeated Unit units = 2;
    }

    message AllRooms {
        CleanMode mode = 1;
        General general = 2;  // 通用模式会有这项
    }

    oneof Task {
        CurrentRoom current_room = 3;
        AllRooms all_rooms = 4;
    }
}

message SceneInfo {
    // 手机 app 新建定时不需要该字段，设备返回 id
    // 手机 app 其他操作需要该字段
    message Id {
        uint32 value = 1;
    }
    Id id = 1;

    bool valid = 2;
    enum InvalidReason {
        NORMAL = 0;             // 正常（非失效状态）
        MAP_NOT_EXIST = 1;      // 地图不存在
        MAP_NOT_AVAILABLE = 2;  // 地图不可用（地图不完整）
        MAP_NOT_MATCH = 3;      // 地图不适配（缺少指定区域）
        OTHER = 4;              // 其他未分类的失效原因
        DEFAULT = 5;  // 后续使用 type 字段，不再使用这个值表示默认场景
    }
    InvalidReason invalid_reason = 3;

    string name = 4;
    uint32 mapid = 5;       // 关联的地图id（无效：-2）

    // 场景执行时的动态时间数据放 WorkStatus 中
    uint32 estimate_time = 6;   // 执行前预估完成时间（无效：0）
    uint32 index = 7;       // 顺序，从1开始

    enum Type {
        SCENE_NORMAL = 0;                   // 普通场景
        WHOLE_HOUSE_DAILY_CLEANING = 1;     // 全屋日常清洁（默认）
        WHOLE_HOUSE_DEEP_CLEANING = 2;      // 全屋深度清洁（默认）
        AFTER_DINNER_CLEANING = 3;          // 饭后清洁（默认）
        PET_AREA_CLEANING = 4;              // 宠物区域清洁（默认）
    }
    Type type = 8;
}

message SceneRequest {
    enum Method {
        DEFAULT = 0;
        ADD_SCENE = 1;      // 添加场景（可选设置定时、是否指定地图）
        DELETE_SCENE = 2;   // 删除场景，使用 message common
        MODIFY_SCENE = 3;   // 修改场景（可选设置定时、是否指定地图）
    }

    Method method = 1;
    uint32 seq = 2;

    message Common {
        uint32 scene_id = 1;
    }

    message Scene {
        SceneInfo info = 1;
        repeated SceneTask tasks = 2;
        TimerInfo.Desc desc = 3;
    }

    oneof Param {
        Common common = 3;
        Scene scene = 4;
    }
}

// 通过 dp 传基础信息
message SceneResponse {
    SceneRequest.Method method = 1;  // 开机/失效上报 DEFAULT，其他情况跟下发相同
    uint32 seq = 2;

    message Result {
        enum Value {
            SUCCESS = 0;
            FAILED = 1;
        }
        Value value = 1;

        uint32 err_code = 2;
    }
    Result result = 3;
    repeated SceneInfo infos = 4;
}